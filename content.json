{"pages":[{"title":"关于我","text":"职业： 大三在读， 想要当一名前端工程师 邮箱： little.lt@foxmail.com 兴趣： 健身，吉他， 小楷 技术栈： JavaScript / Node.js / Vue.js 正在学习中: TypeScript","link":"/about/index.html"}],"posts":[{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2019/09/21/hello-world/"},{"title":"跨域解决方案 CROS","text":"跨域问题来源于浏览器的同源策略，用于隔离潜在的恶意文件。 浏览器的同源策略 同源： 如果两个页面的协议，端口和主机都相同，则两个页面具有相同的源。 IE 例外： IE 未将端口号加入到同源策略的组成部分中 跨域资源共享(CROS) 使用额外的 HTTP 头来告诉浏览器让运行在一个 origin 上的 web 应用被准许访问来自不同源服务器上的资源。 ​ 对于可能对服务器数据产生副作用的 HTTP 请求方法，浏览器必须首先使用 OPTIONS 方法发起一个预检请求，从而确定服务端是否允许该站跨域请求，服务器确认允许后才发起实际的 HTTP 请求。 ​ 上周前端发起的POST 请求变为 OPTIONS 请求的原因是 POST请求发送了MIME 类型的数据，解决办法：用 axios 拦截POST 请求，将请求数据使用qs序列化。现在看来这个解决方法并不好，应该配置服务端，允许前端发起跨域请求。 控制访问头部字段 Accepet-Control-Allow-Origin 指定了该响应的资源是否被允许与给定 origin 共享。 * : 对于 withCredentials = true的请求不允许服务器以*做完该头部字段内容，false 则允许所有域访问资源。 origin: 指定一个可以访问资源的 URI. 如果服务器未使用“*”，而是指定了一个域，那么为了向客户端表明服务器的返回会根据Origin请求头而有所不同，必须在Vary响应头中包含Origin。 Access-Content-Allow-Credentials 定了当浏览器的credentials设置为true时是否允许浏览器读取response的内容。当用在对preflight预检测请求的响应中时，它指定了实际的请求是否可以使用credentials。请注意：简单 GET 请求不会被预检；如果对此类请求的响应中不包含该字段，这个响应将被忽略掉，并且浏览器也不会将相应内容返回给网页。 Access-Control-Expose-Headers 跨域访问时，XMLHttpRequest对象的 getResponseHeader()方法只能拿到一些最基本的响应头，如要访问其他头部字段，则需要设置本字段。 Access-Control-Max-Age 指定了 preflight请求的结果能被缓存多久。","link":"/2019/09/28/跨域解决方案：CROS/"}],"tags":[{"name":"网路","slug":"网路","link":"/tags/网路/"},{"name":"网络","slug":"网络","link":"/tags/网络/"}],"categories":[]}